{"version":3,"sources":["Canvasif.jsx","img/CrossLineVideo.gif","CrossLine.jsx","img/wannagohome.png","Home.jsx","Loading.jsx","RepGen.jsx","Tag.jsx","SuperFilter.jsx","App.js","index.js"],"names":["TextArea","Input","CrossLineWrap","styled","div","Content","CodeInput","CopyBtn","Button","Canvasif","useState","code","setCode","version","updateDate","metadata","setMetadata","note","setNote","codeRef","useRef","bg","useEffect","a","axios","get","data","status","console","error","getData","style","display","fontSize","fontWeight","color","margin","onClick","current","resizableTextArea","textArea","select","document","execCommand","message","destroy","success","size","ref","placeholder","value","rows","ImgWrap","CrossLine","setBg","opacity","src","CrossLineVideo","alt","height","width","position","right","bottom","HomeWrap","Home","wannagohome","Loading","isLoading","LoadingWrap","className","Backdrop","spinning","indicator","LoadingOutlined","spin","RepGenWrap","InputContainer","JsonInput","ConvertBtn","TableContainer","Table","table","TableRow","tr","TableCell","td","RepGen","setIsLoading","labelSrc","setLabelSrc","userSrc","setUserSrc","report","setReport","log","onChange","e","target","parsedUsers","JSON","parse","users","forEach","labels","results","arr","obj","datakey","asset","key","email","work_assignee","issueCnt","open_issue_count","user","name","push","err","borderTop","borderBottom","map","item","index","Tag","SuperFilterWrap","SuperFilter","h3","AppWrap","Nav","Logo","NavItem","span","App","to","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.da48d35d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Input, Button, message } from 'antd';\n\nconst { TextArea } = Input;\n\nconst Canvasif = () => {\n    const [code, setCode] = useState('가져오는 중');\n    const [metadata, setMetadata] = useState({\n        version: '가져오는 중',\n        updateDate: '가져오는 중',\n    });\n    const [note, setNote] = useState('가져오는 중');\n\n    const codeRef = useRef();\n\n    const [bg, setBg] = useState(false);\n\n    useEffect(() => {\n        const getData = async () => {\n            const { data } = await axios.get('https://script.google.com/macros/s/AKfycbwWaKJ6gudoClVLzx_N78pT8H4-PwvW0-nhR9tuod4wdgu-4BXeQFzmiH4JWjTuAfeOIw/exec');\n            if (data.status === 'success') {\n                setCode(data.data[0].code);\n                setMetadata({\n                    version: data.data[0].version,\n                    updateDate: data.data[0].updateDate,\n                })\n                setNote(data.data[0].note);\n            } else {\n                setCode('뭔가 잘못됐습니다. 새로고침후 재시도해주세요.');\n                console.error('뭔가이상함')\n            }\n        }\n        getData();\n    }, []);\n\n    const onCopy = () => {\n        var copyText = codeRef.current.resizableTextArea.textArea;\n        copyText.select();\n        document.execCommand(\"Copy\");\n        message.destroy();\n        message.success('잘 복사되었습니다');\n    };\n\n    const onBack = () => {\n        setBg(!bg);\n    }\n\n    return (\n\n        <CrossLineWrap>\n                \n                <Content style={{display:`${ bg ? 'none' : 'flex'}`}}>\n                    <h2 style={{ fontSize: \"24px\", fontWeight:\"bold\", color:\"#FF625A\" }}>Canvasif</h2>\n                    <p>Superb Ai Suite의 Image(New)프로젝트 워크앱에 Brightness, Contrast 조절기능을 추가해주는 코드입니다.</p>\n                    <p>{`워크앱에서 [F12]-[Console탭]-[ ${'>'} 꺽쇠옆에 코드 붙여넣기 ]-[엔터] 를 하면 적용됩니다.`}</p>\n                    <p style={{margin:\"8px\"}}>{note}</p>\n                    <CopyBtn onClick={onCopy} style={{ margin: \"24px\" }} size=\"large\">복사하기</CopyBtn>\n                    <span>{`버전 : ${metadata.version}      |      수정일 : ${metadata.updateDate}`}</span>\n                    <CodeInput ref={codeRef} placeholder=\"code\" value={code} rows={4} />\n                </Content>\n            \n        </CrossLineWrap>\n    );\n}\n\nconst CrossLineWrap = styled.div`\n    display : flex;\n    flex : 1;\n    justify-content : center;\n    align-items : center;\n    flex-direction : column;\n    position:'relative';\n`;\n\nconst ImgWrap = styled.div`\nheight:100%;\ndisplay:flex;\njustifyContent:center;\n`;\n\nconst Content = styled.div`\n    \n    \n    justify-content : center;\n    align-items : center;\n    flex-direction : column;\n\n    position : fixed;\n    top : 50%;\n    left : 50%;\n\n    transform : translate( -50%, -50% );\n    \n    padding : 16px;\n    border : 1px solid #FF625A;\n\n    background-color : #FFFFFF90;\n`;\n\nconst CodeInput = styled(TextArea)`\n    width : 60%;\n    margin : 8px;\n    &:hover { border-color : #FF625A; }\n    &:focus { \n        border-color : #FF625A; \n        box-shadow: 0 0 0 5px #FF625A30;\n    }\n`;\nconst CopyBtn = styled(Button)`\n    width : 60%;\n    border-radius : 8px;\n    &:hover { \n        border-color : #FF625A; \n        color : #FF625A;\n    }\n    &:focus { \n        border-color : #FF625A; \n        color : #FF625A\n    }\n`;\nexport default Canvasif;","export default __webpack_public_path__ + \"static/media/CrossLineVideo.c5559ddd.gif\";","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Input, Button, message } from 'antd';\nimport CrossLineVideo from './img/CrossLineVideo.gif';\n\nconst { TextArea } = Input;\n\nconst CrossLine = () => {\n    const [code, setCode] = useState('가져오는 중');\n    const [metadata, setMetadata] = useState({\n        version: '가져오는 중',\n        updateDate: '가져오는 중',\n    });\n    const codeRef = useRef();\n\n    const [bg, setBg] = useState(false);\n\n    useEffect(() => {\n        const getData = async () => {\n            const { data } = await axios.get('https://script.google.com/macros/s/AKfycbwOdYkhXblo8IqLeGwjC_7dEGsYvmE35lhsOABjUkfowUiD9gFMw4UeOKbiSDEDiYwX/exec');\n            if (data.status === 'success') {\n                setCode(data.data[0].code);\n                setMetadata({\n                    version: data.data[0].version,\n                    updateDate: data.data[0].updateDate,\n                })\n            } else {\n                setCode('뭔가 잘못됐습니다. 새로고침후 재시도해주세요.');\n                console.error('뭔가이상함')\n            }\n        }\n        getData();\n    }, []);\n\n    const onCopy = () => {\n        var copyText = codeRef.current.resizableTextArea.textArea;\n        copyText.select();\n        document.execCommand(\"Copy\");\n        message.destroy();\n        message.success('잘 복사되었습니다');\n    };\n\n    const onBack = () => {\n        setBg(!bg);\n    }\n\n    return (\n\n        <CrossLineWrap>\n            \n                <ImgWrap style={{opacity:`${ bg ? '1' : '0.2' }`}}>\n                    <img src={CrossLineVideo} alt=\"guide\" style={{ height: \"100%\", width: \"auto\" }} />\n                </ImgWrap>\n                \n                \n                <Content style={{display:`${ bg ? 'none' : 'flex'}`}}>\n                    <h2 style={{ fontSize: \"24px\", fontWeight:\"bold\", color:\"#FF625A\" }}>CrossLine</h2>\n                    <p>Superb Ai Suite의 Image(New)프로젝트 Workapp에 십자선을 추가해주는 코드입니다.</p>\n                    <p>{`워크앱에서 [F12]-[Console탭]-[ ${'>'} 꺽쇠옆에 코드 붙여넣기 ]-[엔터] 를 하면 적용됩니다.`}</p>\n                    <CopyBtn onClick={onCopy} style={{ margin: \"24px\" }} size=\"large\">복사하기</CopyBtn>\n                    <span>{`버전 : ${metadata.version}      |      수정일 : ${metadata.updateDate}`}</span>\n                    <CodeInput ref={codeRef} placeholder=\"code\" value={code} rows={4} />\n                </Content>\n\n                <CopyBtn onClick={onBack} style={{ width:'128px', position:'fixed', right:'20px', bottom:'20px' }} size=\"large\">배경보기</CopyBtn>\n            \n        </CrossLineWrap>\n    );\n}\n\nconst CrossLineWrap = styled.div`\n    display : flex;\n    flex : 1;\n    justify-content : center;\n    align-items : center;\n    flex-direction : column;\n    position:'relative';\n`;\n\nconst ImgWrap = styled.div`\nheight:100%;\ndisplay:flex;\njustifyContent:center;\n`;\n\nconst Content = styled.div`\n    \n    \n    justify-content : center;\n    align-items : center;\n    flex-direction : column;\n\n    position : fixed;\n    top : 50%;\n    left : 50%;\n\n    transform : translate( -50%, -50% );\n    \n    padding : 16px;\n    border : 1px solid #FF625A;\n\n    background-color : #FFFFFF90;\n`;\n\nconst CodeInput = styled(TextArea)`\n    width : 60%;\n    margin : 8px;\n    &:hover { border-color : #FF625A; }\n    &:focus { \n        border-color : #FF625A; \n        box-shadow: 0 0 0 5px #FF625A30;\n    }\n`;\nconst CopyBtn = styled(Button)`\n    width : 60%;\n    border-radius : 8px;\n    &:hover { \n        border-color : #FF625A; \n        color : #FF625A;\n    }\n    &:focus { \n        border-color : #FF625A; \n        color : #FF625A\n    }\n`;\nexport default CrossLine;","export default __webpack_public_path__ + \"static/media/wannagohome.bdfa1aad.png\";","import {useState, useEffect} from 'react';\n\nimport styled from 'styled-components';\n\nimport wannagohome from './img/wannagohome.png';\nfunction Home() {\n\n\n    return (\n        <HomeWrap>\n            <img src={wannagohome} alt=\"gohome\" />\n            <p style={{color:\"grey\"}}>goranimaster17@gmail.com</p>\n        </HomeWrap>\n    )\n}\n\nconst HomeWrap = styled.div`\n    display : flex;\n    flex : 1;\n    flex-direction : column;\n    justify-content : center;\n    align-items : center;\n   \n    padding : 24px;\n`;\n\nexport default Home;","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n    display : flex;\n    justify-content : center;\n    align-items : center;\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n    width : 100%;\n    height : 100%;\n    background-color : rgba(0,0,0, 0.75);\n    `;","import {useState, useEffect} from 'react';\nimport Loading from './Loading';\nimport styled from 'styled-components';\nimport { Input, Button } from 'antd';\nconst { TextArea } = Input;\n\n\n\nfunction RepGen() {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [labelSrc, setLabelSrc] = useState('');\n    const [userSrc, setUserSrc] = useState('');\n    const [report, setReport] = useState([])\n\n    const onGazua = () => {\n        setIsLoading(true);\n\n        try {\n            // 유저 정보 가공\n            const parsedUsers = JSON.parse(userSrc);\n            let users = [] \n            console.log(parsedUsers);\n            parsedUsers.forEach( e => {\n                users = [...users, ...e.users];\n            });\n            console.log(users);\n\n            // 리포트 객체 만들기\n            const labels = (JSON.parse(labelSrc)).results;\n            const arr = [];\n            labels.forEach( e => {\n                let obj = {};\n                obj.datakey = e.asset.key;\n                obj.email = e.work_assignee;\n                obj.issueCnt = e.open_issue_count;\n            \n                for(const user of users){\n                    if(user.email === obj.email){\n                        obj.name = user.name;\n                        break;\n                    }\n                }\n\n                arr.push(obj);\n            })\n            setReport([...arr]);\n        } catch (err) {\n            console.error(err);\n        }\n        \n        setIsLoading(false);\n    }\n\n    useEffect( () => {\n        console.log(report);\n    }, [report]);\n\n    return (\n        <RepGenWrap>\n            <p>RepGen :: Report Generator</p>\n\n            <InputContainer>\n                <p style={{color:\"#FF625A\", fontWeight:\"bold\", fontSize:\"32px\"}}>users/</p>\n                <JsonInput placeholder=\"users/\" value={userSrc} onChange={e=>setUserSrc(e.target.value)} rows={4} />\n                \n                <JsonInput placeholder=\"labels/\" value={labelSrc} onChange={e=>setLabelSrc(e.target.value)}  rows={4} />\n                <p style={{color:\"#FF625A\", fontWeight:\"bold\", fontSize:\"32px\"}}>labels/</p>\n            </InputContainer>\n            \n            <ConvertBtn style={{margin:\"24px\"}} onClick={onGazua} size=\"large\">가즈아</ConvertBtn>\n\n            <TableContainer>\n                <Table>\n                    <TableRow style={{borderTop:\"none\", borderBottom:\"1px solid #FF625A\"}}>\n                        <TableCell style={{color:\"#FF625A\", fontWeight:\"bold\"}}>어사이니</TableCell>\n                        <TableCell style={{color:\"#FF625A\", fontWeight:\"bold\"}}>메일</TableCell>\n                        <TableCell style={{color:\"#FF625A\", fontWeight:\"bold\"}}>데이터키</TableCell>\n                        <TableCell style={{color:\"#FF625A\", fontWeight:\"bold\"}}>이슈카운트</TableCell>\n                    </TableRow>\n                    {\n                        report.map( (item,index) => (\n                            <TableRow key={index}>\n                                <TableCell>{item.name}</TableCell>\n                                <TableCell>{item.email}</TableCell>\n                                <TableCell>{item.datakey}</TableCell>\n                                <TableCell>{item.issueCnt}</TableCell>\n                            </TableRow>\n                        ))\n                    }\n                    \n                </Table>\n            </TableContainer>\n\n            <Loading isLoading={isLoading} />\n        </RepGenWrap>\n    )\n}\n\nconst RepGenWrap = styled.div`\n    display : flex;\n    flex : 1;\n    flex-direction : column;\n    align-items : center;\n\n    padding : 24px 64px;\n`;\n\nconst InputContainer = styled.div`\n    display : flex;\n    width : 100%;\n`;\n\nconst JsonInput = styled(TextArea)`\n    margin : 8px;\n    &:hover { border-color : #FF625A; }\n    &:focus { \n        border-color : #FF625A; \n        box-shadow: 0 0 0 5px #FF625A30;\n    }\n`;\n\nconst ConvertBtn = styled(Button)`\n    width : 128px;\n    height : 128px;\n    border-radius : 64px;\n    &:hover { \n        border-color : #FF625A; \n        color : #FF625A;\n    }\n    &:focus { \n        border-color : #FF625A; \n        color : #FF625A\n    }\n`;\n\nconst TableContainer = styled.div`\n    border : 2px solid #D9D9D9;\n    border-radius : 24px;\n    padding : 8px;\n`;\n\nconst Table = styled.table`\n    text-align : center;\n`;\n\nconst TableRow = styled.tr`\n    border-top : 1px solid #D9D9D9;\n`;\n\nconst TableCell = styled.td`\n    padding : 16px 24px;\n    \n`;\n\nexport default RepGen;","import { Input } from \"antd\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\nfunction Tag({name, index, state, setState}) {\n\n    const handleChange = (e) => {\n        setState([...state.slice(0,index), e.target.value, ...state.slice(index+1, state.length)])\n    }\n\n    return (\n        <div className=\"Tag\">\n            <Input \n                placeholder=\"태그\" \n                value={name}\n                onChange={handleChange}\n                suffix={<CloseCircleOutlined />}\n                style={{width:\"128px\"}} \n            />\n        </div>\n    )\n}\n\nexport default Tag;","import {useState, useEffect} from 'react';\n\nimport styled from 'styled-components';\nimport { Button } from 'antd';\n\nimport Tag from \"./Tag\";\n\nfunction SuperFilter() {\n    const [allof, setAllof] = useState([\"aa\", \"bb\"]);\n    const [noneof, setNoneof] = useState([]);\n\n    return (\n        <SuperFilterWrap>\n            <h3>SuperFilter Route</h3>\n            <p>집에가고싶다</p>\n            {/*<Filter>\n                <FilterName>모두 포함</FilterName>\n                { allof.map( (tag, index) => <Tag name={tag} index={index} state={allof} setState={setAllof}/> ) }\n                \n            </Filter> */}\n            \n            \n\n        </SuperFilterWrap>\n    )\n}\n\nconst SuperFilterWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : center;\n\n    padding : 24px;\n`;\n\nconst Filter = styled.div`\n    display : flex;\n    align-items : center;\n    padding : 16px;\n`;\n\nconst FilterName = styled.h3`\n    color : #FF625A;\n    font-weight : 800;\n    font-size : 16px;\n    margin : 0;\n`;\n\nexport default SuperFilter;","\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nimport styled from 'styled-components';\nimport Canvasif from \"./Canvasif\";\nimport CrossLine from \"./CrossLine\";\n\nimport Home from './Home';\nimport RepGen from './RepGen';\nimport SuperFilter from './SuperFilter';\n\nfunction App() {\n    return (\n        <AppWrap className=\"App\">\n            <HashRouter>\n                <Nav>\n                    <Link to=\"/\"><Logo /></Link>\n                    <Link to=\"/RepGen\"><NavItem>RepGen</NavItem></Link>\n                    <Link to=\"/CrossLine\"><NavItem>CrossLine</NavItem></Link>\n                    <Link to=\"/Canvasif\"><NavItem>Canvasif</NavItem></Link>\n                    <Link to=\"/SuperFilter\"><NavItem>SuperFilter</NavItem></Link>\n                </Nav>\n                <Route path=\"/\" exact={true} component={Home} />\n                <Route path=\"/RepGen\" component={RepGen} />\n                <Route path=\"/CrossLine\" component={CrossLine} />\n                <Route path=\"/Canvasif\" component={Canvasif} />\n                <Route path=\"/SuperFilter\" component={SuperFilter} />\n            </HashRouter>\n        </AppWrap>\n    );\n}\n\nconst AppWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    height : 100%;\n`;\n\nconst Nav = styled.div`\n    display : flex;\n    align-items : center;\n\n    padding-top : 12px;\n    padding-bottom : 12px;\n\n    padding-left : 64px;\n    padding-right : 64px;\n\n    background-color : #333333;\n`;\n\nconst Logo = styled.div`\n    height : 24px;\n    width : 24px;\n\n    border : 3px solid #FF625A;\n`;\n\nconst NavItem = styled.span`\n    margin-left : 16px;\n\n    padding : 8px;\n\n    font-size : 16px;\n    font-weight : 400;\n    color : white;\n\n    border-radius : 8px;\n\n    transition : 0.5s background-color;\n\n    &:hover {\n        transition : 0.5s background-color;\n        background-color : #FFFFFF30;\n    }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}